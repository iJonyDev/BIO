/Users/jonathanquishpe/JoniDev/BIO
dataset <- read.table("GSE60450_Lactation-GenewiseCounts.txt", sep = "\t", header = TRUE)
setwd(/Users/jonathanquishpe/JoniDev/BIO)
setwd("/Users/jonathanquishpe/JoniDev/BIO/")
dataset <- read.table("GSE60450_Lactation-GenewiseCounts.txt", sep = "\t", header = TRUE)
library(data.table)
dataset_pb1 <- fread("/Users/jonathanquishpe/JoniDev/BIO/GSE62301_non-normalized.txt",
sep = "\t",
skip = 1,       # Omite la primera fila
header = TRUE)
# Lee el archivo omitiendo la primera fila, usando la segunda como encabezados
temp <- read.table("/Users/jonathanquishpe/JoniDev/BIO/GSE62301_non-normalized.txt",
sep = "\t",
header = FALSE,  # Importante: cambiamos a FALSE
skip = 1)        # Omite la primera fila
# Asigna los nombres de las columnas
names(temp) <- as.character(unlist(temp[1, ]))
# Elimina la fila que contiene los nombres de columnas (ahora es la primera fila)
dataset <- temp[-1, ]
View(dataset)
View(dataset)
View(dataset)
View(temp)
View(dataset)
View(dataset)
dim(dataset)
dimnames(dataset)
dim(dataset)
colnames(dataset)
mode(dataset)
mode(dataset)
mode(dataset)
length(dataset)
is.matrix(dataset)
dim(dataset)
colnames(dataset)
mode(dataset)
length(dataset)
is.matrix(dataset)
is.data.frame(dataset)
boxplot(dataset$X1, dataset$X2, dataset$X3, dataset$X4, dataset$X5, dataset$X6, dataset$X7, dataset$X8, dataset$X9, dataset$X10, dataset$X11, dataset$X12, dataset$X13, dataset$X14, dataset$X15, dataset$X16, dataset$X17, dataset$X18, dataset$X19, dataset$X20, dataset$X21, dataset$X22, dataset$X23, dataset$X24, dataset$X25, dataset$X26, dataset$X27, dataset$X28, dataset$X29, dataset$X30, dataset$X31, dataset$X32, dataset$X33, dataset$X34, dataset$X35, dataset$X36, dataset$X37, dataset$X38, dataset$X39, dataset$X40, dataset$X41, dataset$X42, dataset$X43, dataset$X44, dataset$X45, dataset$X46, dataset$X47, dataset$X48, dataset$X49, dataset$X50, dataset$X51, dataset$X52, dataset$X53, dataset$X54, dataset$X55, dataset$X56, dataset$X57, dataset$X58, dataset$X59, dataset$X60, dataset$X61, dataset$X62, dataset$X63, dataset$X64, dataset$X65, dataset$X66, dataset$X67, dataset$X68, dataset$X69, dataset$X70, dataset$X71, dataset$X72, dataset$X73, dataset$X74, dataset$X75, dataset$X76, dataset$X77, dataset$X78, dataset$X79, dataset$X80, dataset$X81, dataset$X82, dataset$X83, dataset$X84, dataset$X85, dataset$X86, dataset$X87, dataset$X88, dataset$X89, dataset$X90, dataset$X91, dataset$X92, dataset$X93, dataset$X94, dataset$X95, dataset$X96, dataset$X97, dataset$X98, dataset$X99, dataset$X100)
boxplot(dataset$X1, dataset$X2, dataset$X3, dataset$X4)
boxplot(dataset$X1, dataset$X2, dataset$X3, dataset$X4, horizontal = TRUE)
boxplot(dataset)
boxplot(dataset)
hist(dataset)
plot(dataset[1])
hist(dataset[1])
hist(dataset[1: 10])
(dataset[1: 10], col = "red")
hist(dataset[2: 10], col = "red")
dataset[1: 10]
dataset[1]
dataset[2]
dataset[2][1]
dataset[2][1]
dataset[2][1][1]
dataset[2][1][1][1]
hist(dataset[2: 10])
summary(dataset)
summary(dataset)
summary(dataset)
str(dataset)
for (col in names(dataset)[numeric_columns]) {
hist(dataset[[col]], main = paste("Histograma de", col), xlab = col, col = 'skyblue', border = 'black')
}
numeric_columns <- sapply(dataset, is.numeric)
# Generar un histograma para cada columna numérica
for (col in names(dataset)[numeric_columns]) {
hist(dataset[[col]], main = paste("Histograma de", col), xlab = col, col = 'skyblue', border = 'black')
}
for (col in names(dataset)[numeric_columns]) {
hist(dataset[[col]], main = paste("Histograma de", col), xlab = col, col = 'skyblue', border = 'black')
}
for (col in names(dataset)[numeric_columns]) {
hist(dataset[[col]], main = paste("Histograma de", col), xlab = col, col = 'skyblue', border = 'black')
}
numeric_columns <- sapply(dataset, is.numeric)
# Generar un histograma para cada columna numérica
for (col in names(dataset)[numeric_columns]) {
hist(dataset[[col]], main = paste("Histograma de", col), xlab = col, col = 'skyblue', border = 'black')
}
# Histograma para cada variable numérica
numeric_columns <- sapply(dataset, is.numeric)
for (col in names(dataset)[numeric_columns]) {
print(ggplot(dataset, aes_string(x = col)) +
geom_histogram(binwidth = 30, fill = 'skyblue', color = 'black') +
ggtitle(paste("Distribución de", col)))
}
# Boxplot para cada variable numérica
for (col in names(dataset)[numeric_columns]) {
print(ggplot(dataset, aes_string(x = 'factor(1)', y = col)) +
geom_boxplot(fill = 'skyblue', color = 'black') +
ggtitle(paste("Boxplot de", col)))
}
library(ggplot2)
library(ggplot2)
# Matriz de correlación y heatmap
cor_matrix <- cor(dataset[, numeric_columns])
library(corrplot)
View(cor_matrix)
View(cor_matrix)
View(cor_matrix)
View(cor_matrix)
# Gráfico de dispersión
pairs(dataset[, numeric_columns], col = "blue")
# Prueba de normalidad de Shapiro-Wilk
for (col in names(dataset)[numeric_columns]) {
shapiro_test <- shapiro.test(dataset[[col]])
cat("Prueba de Shapiro-Wilk para", col, ":\n")
print(shapiro_test)
}
# Seleccionar las columnas numéricas del dataframe
numeric_columns <- sapply(dataset, is.numeric)
# Prueba de normalidad de Shapiro-Wilk
for (col in names(dataset)[numeric_columns]) {
shapiro_test <- shapiro.test(dataset[[col]])
cat("Prueba de Shapiro-Wilk para", col, ":\n")
print(shapiro_test)
}
# Seleccionar las columnas numéricas del dataframe
numeric_columns <- sapply(dataset, is.numeric)
# Matriz de correlación y heatmap
cor_matrix <- cor(dataset[, numeric_columns])
library(corrplot)
dataset[2]
dataset[1]
i <- dataset[1]
i
i[1,10]
i
i[1]
i[1,]
i[1,2]
i[10,]
i[10:20,]
i[10:20]
i[10:20,]
j <- dataset[2]
j[1:10,]
min(j)
sort(j)
j
sort([1:10,])
sort(j[1:10,])
sort(j[1:10,], decreasing = TRUE)
print(max_values)
max_values <- sapply(dataset[, numeric_columns], max, na.rm = TRUE)
print(max_values)
View(max_values)
View(max_values)
View(max_values)
View(max_values)
View(max_values)
View(cor_matrix)
View(cor_matrix)
View(cor_matrix)
View(cor_matrix)
View(cor_matrix)
View(dataset)
View(temp)
View(dataset)
View(i)
View(cor_matrix)
View(i)
View(j)
View(i)
View(cor_matrix)
# Lee el archivo omitiendo la primera fila, usando la segunda como encabezados
temp <- read.table("/Users/jonathanquishpe/JoniDev/BIO/GSE62301_non-normalized.txt",
sep = "\t",
header = FALSE,  # Importante: cambiamos a FALSE
skip = 1)        # Omite la primera fila
# Asigna los nombres de las columnas
names(temp) <- as.character(unlist(temp[1, ]))
# Elimina la fila que contiene los nombres de columnas (ahora es la primera fila)
dataset <- temp[-1, ]
summary(dataset)
str(dataset)
# Convierte las columnas de SAMPLE a numéricas (si no lo están ya)
dataset[, c("SAMPLE 1", "SAMPLE 2", "SAMPLE 3", "SAMPLE 4", "SAMPLE 5", "SAMPLE 6", "SAMPLE 7", "SAMPLE 8")] <- lapply(dataset[, c("SAMPLE 1", "SAMPLE 2", "SAMPLE 3", "SAMPLE 4", "SAMPLE 5", "SAMPLE 6", "SAMPLE 7", "SAMPLE 8")], as.numeric)
# Crea histogramas para cada variable SAMPLE
par(mfrow=c(2, 4)) # Para mostrar varios gráficos en una cuadrícula
for (i in 2:9) { # Ajusta el rango según las columnas de SAMPLE
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 2)) # Muestra los siguientes 4 gráficos
for (i in 6:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dev.new(width = 10, height = 6) # Ajusta el ancho y la altura según sea necesario
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 4), mar = c(4, 4, 2, 1) + 0.1) # Reduce los márgenes
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor", cex.main = 0.8, cex.lab = 0.8) # Reduce el tamaño
}
par(mfrow=c(2, 4))
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor", cex.main = 0.8, cex.lab = 0.8) # Reduce el tamaño
}
par(mfrow=c(2, 4), mar = c(4, 4, 2, 1) + 0.1) # Reduce los márgenes
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 4), mar = c(4, 4, 2, 1) + 0.1) # Reduce los márgenes
for (i in 2:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
par(mfrow=c(2, 2)) # Muestra los siguientes 4 gráficos
for (i in 6:9) {
hist(dataset[, i], main=names(dataset)[i], xlab="Valor")
}
dataset
dataset[2]
dataset[2,]
str(dataset)
hist(dataset$Sample1, col = "blue", main = "Histogram of Sample1")
hist(dataset[,2])
hist(dataset[,3])
hist(dataset[,3])
hist(dataset[,4])
hist(dataset[,6])
sample_1 <- c(2464.86300, 335.50430, 1096.50400, 5354.91000, 15.81540, 1334.82600,
358.36560, 56.49963, 302.34470, 250.59680, 48.69625, 260.92630,
53.80487, 59.21077, 511.24470, 1595.77500)
# Valores de Detection Pval
detection_pval <- c(0.000052, 0.000154, 0.000075, 0.000018, 0.344384, 0.000039,
0.000149, 0.044984, 0.000017, 0.000024, 0.026494, 0.000036,
0.083473, 0.038962, 0.000223, 0.000092)
# Crear el gráfico de dispersión
plot(sample_1, detection_pval, main="Relación entre SAMPLE 1 y Detection Pval",
xlab="SAMPLE 1", ylab="Detection Pval", pch=19, col="blue")
# Visualización de la distribución de SAMPLE 1
hist(dataset$SAMPLE_1, main="Distribución de SAMPLE 1", xlab="Valores de SAMPLE 1", col="blue")
# Visualización de la distribución de SAMPLE 1
hist(dataset[2], main="Distribución de SAMPLE 1", xlab="Valores de SAMPLE 1", col="blue")
# Visualización de la distribución de SAMPLE 1
hist(dataset[,2], main="Distribución de SAMPLE 1", xlab="Valores de SAMPLE 1", col="blue")
# Visualización de la distribución de SAMPLE 1
hist(dataset[,2], main="Distribución de SAMPLE 1", xlab="Valores de SAMPLE 1", col="blue")
dataset[,2]
mean(dataset[,2])
